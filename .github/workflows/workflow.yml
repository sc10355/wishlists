

name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.11

    # Required services    
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "honcho==1.1.0" "pylint==3.2.2" "flake8==7.0.0" "black==24.4.2" "pytest==8.2.1" "pytest-pspec==0.0.4" "pytest-cov==5.0.0" "factory-boy==3.3.0" "coverage==7.5.3" "httpie==3.2.2" "poetry-plugin-export==1.7.1" "Flask==3.0.3" "flask-sqlalchemy==3.1.1"
          pip install "retry2==^0.9.5"  "python-dotenv==1.0.1" "gunicorn==22.0.0"
 
          poetry config virtualenvs.create false
         
    


      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # test for complexity. The GitHub editor is 127 chars wide
          flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          # Run pylint to catch other PEP8 errors
          pylint service tests --max-line-length=127

      - name: Run unit tests with PyTest
        run: pytest --pspec --cov=service --cov-report=xml --cov-fail-under=95
        env:
          DATABASE_URI: "redis://redis:6379"

      # Create a CODECOV_TOKEN in Settings->Secrets and variables->Actions
      # and then uncomment the CodeCov action during hands-on lab

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3.1.4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} 
